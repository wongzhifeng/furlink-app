---
alwaysApply: false
description: Zion代码组件需求完善流程，通过智能提问引导用户完善组件开发需求
---

# Zion 代码组件需求完善流程

## 🎯 完善目标

通过系统化的问题渐进式引导收集信息，完善组件开发需求，确保Cursor能够准确理解并实现用户需求。

## 🧠 智能提问原则

### 核心原则
1. **一次一问**: 每次只问1个问题，最多2个
2. **简单直接**: 回复简单直接，思考过程不用转述
3. **智能提取**: 从用户描述中自动提取有效信息
4. **循序渐进**: 从基础信息到详细需求

## 📋 8步完善流程

### 第一步：组件基础信息收集

**目标**: 了解用户要开发什么类型的组件以及应用平台

**智能提问**:
1. **组件名称**: 从用户需求中提取功能名称作为组件名（英文），如无法提取则询问
2. **组件用途**: 这个组件主要用来做什么？
3. **组件应用平台**: 这个组件用在web还是微信小程序内？

**智能调整**:
- 语音转文字功能 → "语音转文字组件""功能类组件项目"
- 柱状图展示数据功能 → "柱状图展示组件""数据图表类组件项目"

**特殊处理**: 第三方SDK组件需要用户补充SDK接入文档

### 第二步：组件功能挖掘

**目标**: 了解组件需要哪些基本功能

**智能提问**:
1. **输入功能**: 用户如何提供输入？
2. **输出功能**: 结果如何展示？

**分类调整**:
- **语音转换类**: 询问输入方式和输出格式
- **数据展示类**: 询问显示内容和用户操作
- **表单操作类**: 询问表单字段和提交方式
- **文件上传类**: 询问文件类型和上传方式
- **图表统计类**: 询问数据源和图表类型

### 第三步：数据需求了解

**目标**: 了解数据来源和处理需求

**智能提问**:
1. **数据来源**: 数据从哪里获取？
2. **处理需求**: 需要什么特殊处理逻辑？

**分类调整**:
- **语音转换**: 音频格式、语言识别、转换精度
- **数据展示**: 数据表名、字段信息、筛选条件
- **表单操作**: 数据验证、提交目标、反馈方式
- **文件上传**: 文件格式、大小限制、存储位置
- **图表统计**: 数据源、计算方式、更新频率

### 第四步：界面设计了解

**目标**: 了解界面要求和设计风格

**智能提问**:
1. **布局方式**: 具体的展示布局是怎样的？
2. **显示数量**: 相关的数量设置（如分页数量）
3. **设计风格**: 设计风格和主题颜色（可发送UI参考截图）
4. **图表库引用**：根据需求引用图表库样式

### 第五步：交互体验了解

**目标**: 了解基本的交互需求

**智能提问**:
1. **处理状态**: 处理过程中需要显示什么？
2. **错误处理**: 如果出错了怎么办？

**分类调整**:
- **语音转换**: 转换进度、格式验证、错误提示
- **数据展示**: 加载状态、分页交互、筛选交互
- **表单操作**: 验证反馈、提交状态、成功提示
- **文件上传**: 上传进度、格式检查、失败重试
- **图表统计**: 数据刷新、交互操作、异常处理

### 第六步：账号信息收集

**目标**: 验证是否存在账号.md文档，若存在则读取其中邮箱和密码信息与用户确认，若读取为空或者不存在则向用户收集邮箱账号和密码并保存在账号.md 内。不需要考虑MCP相关内容
**账号限制**必须为邮箱，禁止手机号

**提问**: 请提供您的Zion平台登录邮箱、密码

### 第七步：参数结构确认

**目标**: 根据需求生成参数结构并确认，分为必填和非必填（在不影响功能逻辑的情况下用户需要填的参数越少越好）

**生成说明**:
- **PropData（输入参数）**: 可调整的组件设置，大部分用默认值
- **StateData（输出参数）**: 组件管理的数据，如当前状态、计算结果
- **Event（事件参数）**: 可选功能，如点击事件、数据变化通知

**提问**: 根据您的需求，我生成了以下参数，请确认是否需要调整？

### 第八步：验收标准确认

**目标**: 确认完善后的开发需求

**提问**: 这是完善后的开发需求，请确认。如有补充或修改请告知。

## 📝 快速模板

### 语音转文字类
```
1. 组件名称 → 2. 组件用途 → 3. 输入方式 → 4. 输出格式 
→ 5. 音频格式 → 6. 处理逻辑 → 7. 界面布局 → 8. 设计风格 
→ 9. 转换状态 → 10. 错误处理 → 11. 账号信息 → 12. 参数确认 → 13. 最终确认
```

### 数据展示类
```
1. 组件名称 → 2. 组件用途 → 3. 显示内容 → 4. 用户操作 
→ 5. 数据来源 → 6. 筛选条件 → 7. 展示方式 → 8. 设计风格 
→ 9. 分页设置 → 10. 加载状态 → 11. 错误处理 → 12. 账号信息 → 13. 参数确认 → 14. 最终确认
```

### 表单操作类
```
1. 组件名称 → 2. 表单用途 → 3. 表单字段 → 4. 字段类型 
→ 5. 必填字段 → 6. 验证规则 → 7. 表单布局 → 8. 设计风格 
→ 9. 提交目标 → 10. 提交反馈 → 11. 账号信息 → 12. 参数确认 → 13. 最终确认
```

### 文件上传类
```
1. 组件名称 → 2. 文件类型 → 3. 文件格式 → 4. 文件大小 
→ 5. 上传数量 → 6. 上传方式 → 7. 上传界面 → 8. 设计风格 
→ 9. 上传进度 → 10. 文件预览 → 11. 账号信息 → 12. 参数确认 → 13. 最终确认
```

### 图表统计类
```
1. 组件名称 → 2. 图表用途 → 3. 图表类型（根据需求选择引用图表库） → 4. 数据来源 
→ 5. 更新频率 → 6. 交互操作 → 7. 显示设置 → 8. 设计风格 
→ 9. 响应式 → 10. 账号信息 → 11. 参数确认 → 12. 最终确认
```

**图表库推荐**:
- **ECharts**: 适合复杂图表、数据可视化、交互式图表
- **Chart.js**: 适合简单图表、轻量级应用
- **D3.js**: 适合自定义图表、复杂数据可视化
- **AntV G2**: 适合企业级图表、统计图表
- **Recharts**: 适合React生态的图表组件

## ✅ 完善检查清单

### 基础信息
- [ ] 组件名称明确
- [ ] 组件用途清楚
- [ ] 组件应用平台明确
- [ ] 基本功能了解

### 数据需求
- [ ] 数据来源明确
- [ ] 显示字段确定
- [ ] 筛选条件了解

### 界面要求
- [ ] 布局方式确定
- [ ] 显示数量明确
- [ ] 设计风格明确
- [ ] 基本交互了解
- [ ] 是否引用图表库

### 技术信息
- [ ] 账号信息提供
- [ ] 核心功能确认
- [ ] 验收标准明确

## 🎯 完善完成标志

当用户确认最终需求后，输出提示：
```
✅ 需求完善完成！请输入 "PLAN" 生成开发计划。
```

---

**注意**: 本文件专注收集信息完善需求，不包含开发实现逻辑。开发计划和执行请参考主控制器调度。